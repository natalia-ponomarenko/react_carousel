{"version":3,"sources":["components/Carousel.tsx","formReducer.ts","variables.ts","components/Input.tsx","components/Checkbox.tsx","App.tsx","index.tsx"],"names":["Carousel","images","itemWidth","frameSize","animationDuration","step","infinite","useState","shift","setShift","frameWidth","maxShift","length","possibleShift","fullWidth","className","style","width","transform","transitionDuration","map","image","index","src","alt","type","onClick","prevState","formReducer","state","action","name","payload","initialState","Input","labelText","id","value","min","max","handleChange","htmlFor","onChange","e","CheckBox","checked","App","useReducer","dispatch","handleNumberInputChange","target","toString","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9960206d.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport './Carousel.scss';\n\ntype Props = {\n  images: string[];\n  itemWidth: number;\n  frameSize: number;\n  step: number;\n  animationDuration: number;\n  infinite: boolean;\n};\n\nexport const Carousel: React.FC<Props> = ({\n  images,\n  itemWidth,\n  frameSize,\n  animationDuration,\n  step,\n  infinite,\n}) => {\n  const [shift, setShift] = useState(0);\n\n  const frameWidth = itemWidth * frameSize;\n  const maxShift = (images.length - frameSize) * itemWidth;\n  const possibleShift = itemWidth * step;\n  const fullWidth = images.length * itemWidth;\n\n  const moveRight = () => {\n    if (infinite && (shift === -maxShift)) {\n      setShift(possibleShift);\n    }\n\n    setShift(prevState => (prevState - possibleShift <= -maxShift\n      ? -maxShift\n      : prevState - possibleShift));\n  };\n\n  const moveLeft = () => {\n    if (infinite && (shift === 0)) {\n      setShift(-fullWidth);\n    }\n\n    setShift(prevState => (prevState <= -possibleShift\n      ? prevState + possibleShift\n      : 0));\n  };\n\n  return (\n    <div className=\"Carousel\">\n      <div\n        className=\"Carousel__wrapper\"\n        style={{\n          width: `${frameWidth}px`,\n        }}\n      >\n        <ul\n          className=\"Carousel__list\"\n          style={{\n            transform: `translateX(${shift}px)`,\n            transitionDuration: `${animationDuration}ms`,\n          }}\n        >\n          {images.map((image: string, index: number) => (\n            <li key={image}>\n              <img\n                src={image}\n                alt={`smilie â„– ${index + 1}`}\n                style={{ width: `${itemWidth}px` }}\n              />\n            </li>\n          ))}\n        </ul>\n      </div>\n\n      <button\n        type=\"button\"\n        onClick={moveLeft}\n      >\n        Prev\n      </button>\n      <button\n        type=\"button\"\n        data-cy=\"next\"\n        onClick={moveRight}\n      >\n        Next\n      </button>\n    </div>\n  );\n};\n","import { Action, State } from './types';\n\nexport function formReducer(state: State, action: Action) {\n  switch (action.type) {\n    case 'HANDLE NUMBER INPUT':\n      return {\n        ...state,\n        [action.name]: action.payload,\n      };\n    case 'HANDLE CHECKBOX':\n      return {\n        ...state,\n        infinite: !state.infinite,\n      };\n    default:\n      return state;\n  }\n}\n","export const initialState = {\n  images: [\n    './img/1.png',\n    './img/2.png',\n    './img/3.png',\n    './img/4.png',\n    './img/5.png',\n    './img/6.png',\n    './img/7.png',\n    './img/8.png',\n    './img/9.png',\n    './img/10.png',\n  ],\n  itemWidth: 130,\n  frameSize: 3,\n  step: 3,\n  animationDuration: 1000,\n  infinite: false,\n};\n","type Props = {\n  labelText: string,\n  id: string,\n  value: number,\n  min: string,\n  max: string,\n  step?: string,\n  handleChange: (event: React.ChangeEvent<HTMLInputElement>) => void;\n};\n\nexport const Input: React.FC<Props> = ({\n  labelText,\n  id,\n  value,\n  min,\n  max,\n  step,\n  handleChange,\n}) => {\n  return (\n    <div>\n      <label htmlFor={id}>{labelText}</label>\n      <input\n        type=\"number\"\n        id={id}\n        name={id}\n        min={min}\n        max={max}\n        value={value}\n        step={step}\n        onChange={(e) => handleChange(e)}\n      />\n    </div>\n  );\n};\n\nexport default Input;\n","type Props = {\n  labelText: string,\n  id: string,\n  checked: boolean,\n  onChange: any,\n};\n\nexport const CheckBox: React.FC<Props> = ({\n  labelText,\n  id,\n  checked,\n  onChange,\n}) => {\n  return (\n    <div>\n      <label htmlFor={id}>{labelText}</label>\n      <input\n        type=\"checkbox\"\n        id={id}\n        name={id}\n        checked={checked}\n        onChange={onChange}\n      />\n    </div>\n  );\n};\n\nexport default CheckBox;\n","import React, { useReducer } from 'react';\nimport './App.scss';\nimport { Carousel } from './components/Carousel';\nimport { formReducer } from './formReducer';\nimport { initialState } from './variables';\nimport { Input } from './components/Input';\nimport { CheckBox } from './components/Checkbox';\n\nconst App: React.FC<{}> = () => {\n  const [state, dispatch] = useReducer(formReducer, initialState);\n\n  const {\n    images,\n    itemWidth,\n    frameSize,\n    step,\n    animationDuration,\n    infinite,\n  } = state;\n\n  const handleNumberInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const { name, value } = e.target;\n\n    dispatch({\n      type: 'HANDLE NUMBER INPUT',\n      name,\n      payload: +value,\n    });\n  };\n\n  return (\n    <div className=\"App\">\n      {/* eslint-disable-next-line */}\n      <h1 data-cy=\"title\">Carousel with {images.length} images</h1>\n\n      <Carousel\n        images={images}\n        itemWidth={itemWidth}\n        frameSize={frameSize}\n        step={step}\n        animationDuration={animationDuration}\n        infinite={infinite}\n      />\n\n      <div>\n        <Input\n          labelText=\"Image width\"\n          id=\"itemWidth\"\n          min=\"100\"\n          max=\"300\"\n          value={state.itemWidth}\n          handleChange={handleNumberInputChange}\n        />\n        <Input\n          labelText=\"Number of pictures shown\"\n          id=\"frameSize\"\n          min=\"1\"\n          max={images.length.toString()}\n          value={state.frameSize}\n          handleChange={handleNumberInputChange}\n        />\n\n        <Input\n          labelText=\"Step\"\n          id=\"step\"\n          min=\"1\"\n          max=\"10\"\n          value={state.step}\n          handleChange={handleNumberInputChange}\n        />\n\n        <Input\n          labelText=\"Animation Duration\"\n          id=\"animationDuration\"\n          min=\"500\"\n          max=\"3000\"\n          step=\"500\"\n          value={state.animationDuration}\n          handleChange={handleNumberInputChange}\n        />\n\n        <CheckBox\n          labelText=\"Infinite\"\n          id=\"infinite\"\n          checked={state.infinite}\n          onChange={() => dispatch({ type: 'HANDLE CHECKBOX' })}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}